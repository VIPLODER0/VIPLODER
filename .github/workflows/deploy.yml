name: Deploy 3D House Plan to Pages

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/deploy.yml"
      - "plan/**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate static 3D viewer
        run: |
          mkdir -p dist
          cat > dist/index.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>15x45 2BHK - 3D Viewer</title>
            <style>
              html,body { margin:0; padding:0; height:100%; background:#111; color:#eee; font-family:system-ui, sans-serif;}
              #app { position:fixed; inset:0; }
              .hud {
                position: fixed; top: 12px; left: 12px; background: rgba(0,0,0,0.55);
                padding: 10px 12px; border-radius: 10px; backdrop-filter: blur(4px); line-height:1.35;
              }
              .hud h1 { margin:0 0 6px 0; font-size: 16px; }
              .hud small { opacity: .8; }
            </style>
          </head>
          <body>
            <div class="hud">
              <h1>15×45 ft — 2BHK (Interactive)</h1>
              <div>Drag = Orbit, Scroll = Zoom, Right-drag = Pan</div>
              <small>Rooms: Hall, Bed-1, Kitchen, Common Bath, Bed-2, Staircase</small>
            </div>
            <div id="app"></div>

            <!-- Use ES modules from CDN -->
            <script type="module">
              import * as THREE from "https://unpkg.com/three@0.160.0/build/three.module.js";
              import { OrbitControls } from "https://unpkg.com/three@0.160.0/examples/jsm/controls/OrbitControls.js";

              const app = document.getElementById("app");
              const renderer = new THREE.WebGLRenderer({ antialias: true });
              renderer.setSize(window.innerWidth, window.innerHeight);
              renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
              renderer.setClearColor(0x111111);
              app.appendChild(renderer.domElement);

              const scene = new THREE.Scene();

              // Camera
              const camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 0.1, 1000);
              camera.position.set(16, 18, 38);

              const controls = new OrbitControls(camera, renderer.domElement);
              controls.target.set(7.5, 0, 22.5);
              controls.enableDamping = true;

              // Lights
              const hemi = new THREE.HemisphereLight(0xffffff, 0x222233, 0.9);
              scene.add(hemi);
              const dir = new THREE.DirectionalLight(0xffffff, 0.6);
              dir.position.set(20, 30, 10);
              scene.add(dir);

              // Ground & grid
              const groundGeo = new THREE.PlaneGeometry(200, 200);
              const groundMat = new THREE.MeshPhongMaterial({ color: 0x0f0f0f, shininess: 0 });
              const ground = new THREE.Mesh(groundGeo, groundMat);
              ground.rotation.x = -Math.PI / 2;
              ground.position.y = -0.01;
              scene.add(ground);

              const grid = new THREE.GridHelper(100, 100, 0x444444, 0x222222);
              grid.position.y = 0;
              scene.add(grid);

              // -------- Floor plan to 3D ----------
              // Units: feet scaled to 0.2 (so 1 ft = 0.2 three units)
              const S = 0.2;
              const WALL_H = 8 * S; // 8 ft visible wall height

              // Helper: add a room as a low wall "box" (wireframe + transparent fill)
              function addRoom(name, x, y, w, l, h, color=0x2a9d8f) {
                const geo = new THREE.BoxGeometry(w*S, h, l*S);
                const mat = new THREE.MeshPhongMaterial({ color, transparent: true, opacity: 0.28 });
                const mesh = new THREE.Mesh(geo, mat);
                // three.js coordinates: x (width), z (length), y (height)
                mesh.position.set((x + w/2)*S, h/2, (y + l/2)*S);
                scene.add(mesh);

                const edges = new THREE.EdgesGeometry(geo);
                const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0xffffff }));
                line.position.copy(mesh.position);
                scene.add(line);

                // Simple floating label
                const sprite = labelSprite(name);
                sprite.position.set(mesh.position.x, h + 0.2, mesh.position.z);
                scene.add(sprite);
              }

              // Label as sprite (canvas texture)
              function labelSprite(text) {
                const canvas = document.createElement('canvas');
                const size = 256;
                canvas.width = size; canvas.height = size;
                const ctx = canvas.getContext('2d');
                ctx.fillStyle = 'rgba(0,0,0,0.55)';
                ctx.fillRect(0,0,size,size);
                ctx.fillStyle = 'white';
                ctx.font = '28px system-ui, sans-serif';
                ctx.textAlign = 'center';
                ctx.textBaseline = 'middle';
                ctx.fillText(text, size/2, size/2);

                const tex = new THREE.CanvasTexture(canvas);
                const mat = new THREE.SpriteMaterial({ map: tex, transparent: true, depthWrite: false });
                const sprite = new THREE.Sprite(mat);
                sprite.scale.set(4, 4, 1);
                return sprite;
              }

              // ----------------- ROOMS (ft) -----------------
              // Coordinate system: origin at front-left corner of plot.
              // x = width (0..15), y = length along plot (0..45)
              // Our earlier 2D layout:
              // Hall:        15 x 12 at y=33
              // Bedroom 1:   10 x 12 at y=21
              // Kitchen:      8 x 10 at y=11
              // Common Bath:  6 x  6 at y=11, x starts at 8 (beside kitchen)
              // Bedroom 2:   10 x 12 at y= -1  (rear)
              // Staircase:    6 x 12 at y= -1, x starts at 9 (beside Bed-2)
              addRoom("Hall (15×12)",        0, 33, 15, 12, WALL_H, 0x6ba9ff);
              addRoom("Bedroom 1 (10×12)",   0, 21, 10, 12, WALL_H, 0xffc857);
              addRoom("Kitchen (8×10)",      0, 11,  8, 10, WALL_H, 0x2a9d8f);
              addRoom("Common Bath (6×6)",   8, 11,  6,  6, WALL_H, 0xe76f51);
              addRoom("Bedroom 2 (10×12)",   0, -1, 10, 12, WALL_H, 0xf4a261);
              addRoom("Staircase (6×12)",    9, -1,  6, 12, WALL_H, 0x8d99ae);

              // Outer boundary (15x45) low outline
              const outlineGeo = new THREE.BoxGeometry(15*S, 0.2, 45*S);
              const outline = new THREE.LineSegments(
                new THREE.EdgesGeometry(outlineGeo),
                new THREE.LineBasicMaterial({ color: 0x88ffffff })
              );
              outline.position.set(15*S/2, 0.1, 45*S/2);
              scene.add(outline);

              // Animation loop
              function tick() {
                controls.update();
                renderer.render(scene, camera);
                requestAnimationFrame(tick);
              }
              tick();

              // Resize
              window.addEventListener("resize", () => {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
              });
            </script>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
